name: Backport

on:
  pull_request_target:
    types: [labeled]
jobs:
  backport:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Set environment variables
        run: |
          LABEL=${{ github.event.label.name }}
          BRANCH="${LABEL#backport-}"
          echo "BACKPORT_TARGET=$BRANCH" >> $GITHUB_ENV
          BACKPORT="backport/pr-${{ github.event.pull_request.number }}-$BACKPORT_TARGET"
          echo "BACKPORT_BRANCH=$BACKPORT" >> $GITHUB_ENV

      - name: Checkout backport target branch
        uses: actions/checkout@v4
        with:
          ref: ${{ env.BACKPORT_TARGET }}
          fetch-depth: 0

      - name: Configure Git identity
        run: |
          git config user.name "github-actions"
          git config user.email "<>"

      - name: Get PR commits and cherry-pick
        id: cherry-pick
        run: |
          COMMITS=$(git log --pretty="format:%H" --reverse ${{ github.event.pull_request.merge_commit_sha }}^1..${{ github.event.pull_request.merge_commit_sha }}^2)
          echo "$COMMITS" >> commits.txt
          git checkout -b $BACKPORT_BRANCH
          conflict=false
          while read -r sha; do
          if ! git cherry-pick "$sha"; then
            echo "Conflict in $sha"
            git cherry-pick --abort
            conflict=true
          fi
          done < commits.txt
          echo "conflict=$conflict" >> $GITHUB_OUTPUT

      - run: git push origin $BACKPORT_BRANCH


      - name: Comment PR if conflict
        #if: ???
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'Conflict during cherrypick from PR #${{ github.event.pull_request.number }} to branch ${{ env.BACKPORT_TARGET }}'
            })

      - name: Create Pull Request
        uses: actions/github-script@v7
        with:
          script: |
              const { repo, owner } = context.repo;
              const result = await github.rest.pulls.create({
                title: 'Backport PR #${{ github.event.pull_request.number }} to ${{ env.BACKPORT_TARGET }}',
                owner,
                repo,
                head: process.env.BACKPORT_BRANCH,
                base: process.env.BACKPORT_TARGET,
                body: 'This PR is auto-generated.'
              });
              github.rest.issues.addLabels({
                owner,
                repo,
                issue_number: result.data.number,
                labels: []
              });

    #if: startsWith(github.event.label.name, 'backport-')
    # toto bude problém v případě zavření PR bez labelu? -> startsWith(github.event.label.name, 'backport-')